keywords = {"auto","break","case","char","const","continue","default","do",
"double","else","enum","extern","float","for","goto",
"if","int","long","register","return","short","signed",
"sizeof","static","struct","switch","typedef","union",
"unsigned","void","volatile","while","printf","scanf","%d","include","stdio.h","main"}

operators = {"+","-","*","/","<",">","=","<=",">=","==","!=","++","--","%"}

delimiters = {'(',')','{','}','[',']','"',"'",';','#',',',''}

def detect_keywords(text):
	arr = []
	for word in text:
		if word in keywords:
			arr.append(word)
	return list(set(arr))

def detect_operators(text):
	arr = []
	for word in text:
		if word in operators:
			arr.append(word)
	return list(set(arr))

def detect_delimiters(text):
	arr = []
	for word in text:
		if word in delimiters:
			arr.append(word)
	return list(set(arr))

def detect_num(text):
	arr = []
	for word in text:
		try:
			a = int(word)
			arr.append(word)
		except:
			pass
	return list(set(arr))

def detect_identifiers(text):
	k = detect_keywords(text)
	o = detect_operators(text)
	d = detect_delimiters(text)
	n = detect_num(text)
	not_ident = k + o + d + n
	arr = []
	for word in text:
		if word not in not_ident:
			arr.append(word)
	return arr

with open('text.txt') as t:
	text = t.read().split()

for i in text:
	if i=='()':
		text.remove(i)
		text.append('(')
		text.append(')')
	if i=="#include<stdio.h>":
		text.remove("#include<stdio.h>")
		print("Header: #include<stdio.h>")
	elif i in detect_keywords(text):
		print(f'{i}- Keyword')
	elif i in detect_operators(text):
		print(f'{i}- Operators')
	elif i in detect_delimiters(text):
		print(f'{i}- Delimiters')
	elif i in detect_identifiers(text):
		print(f'{i}- Identifiers')
	elif i in detect_num(text):
		print(f'{i}- Numbers')








#include<stdio.h>
int main ()
{  int a ;
    a = 10 ;
    printf ( " The value of a is %d " , a ) ;
    return 0 ;
}